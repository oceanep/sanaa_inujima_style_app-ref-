$screenHeight: 100vh;
$screenWidth: 100vw;
// @function getTranslate($h, $w){
//   @return calc(#{$w} - #{$h} * 1.5);
// }
// @mixin translateX ($x) {
//   transform:(translateX($x));
// }

.screenContainer {
  height: $screenHeight;
  width: 100vw;
  position: relative;
  overflow: hidden;
  background-color: #DCF8FF;
  opacity: 0;
  transition:
    opacity 2s ease-in;

  &.opened {
    opacity: 1;
  }
}

.mapSVG {
  height: $screenHeight;
  margin-left: -25vh;
  overflow: visible;
  // @include translateX (getTranslate($screenHeight, $screenWidth));
}

.controller {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  font-size: 60px;
  height: 3.1em;
  width: 1.25em;
  position: absolute;
  bottom: 6%;
  right: 10%;

  .plusButton {
    border-radius: .16em;
    background-color: rgba(0,0,0,.4);
    padding: 3px;
    color: white;
    width: 100%;
    cursor: pointer;
    line-height: 1.3em;
    text-align: center;
    box-sizing: content-box;
  }
  .minusButton {
    border-radius: .16em;
    background-color: rgba(0,0,0,.4);
    padding: 3px;
    color: white;
    cursor: pointer;
    width: 100%;
    font-weight: 900;
    line-height: 1.3em;
    text-align: center;
    box-sizing: content-box;
  }

}

.rect1 {
  fill: grey;
}

.rect2 {
  fill: black;
}

.st0{opacity:0.8;fill:#DCF8FF;enable-background:new;}

@media only screen
  and (min-width: 800px)
  and (orientation: landscape)
  and (-webkit-min-device-pixel-ratio: 1.5){
  .mapSVG {
    height: $screenWidth;
    margin-left: -25vw;
  }

  .controller {
    font-size: 30px;
    height: 3.5em;
    width: 1.25em;
    bottom: 10%;
  }
}
@media only screen
  and (min-width: 800px)
  and (orientation: portrait)
  and (-webkit-min-device-pixel-ratio: 1.5) {

  .mapSVG {
    height: $screenHeight;
    margin-left: -25vh;
    // @include translateX (getTranslate($screenHeight, $screenWidth));
  }

  .controller {
    font-size: 30px;
    height: 3.5em;
    width: 1.25em;
    bottom: 10%;
  }
}
